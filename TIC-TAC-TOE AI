import math

board = [' ' for _ in range(9)]

def print_board():
    for i in range(3):
        print('|'.join(board[i*3:(i+1)*3]))
        if i < 2:
            print('-----')

def check_winner(brd, player):
    win_combos = [
        [0,1,2], [3,4,5], [6,7,8],
        [0,3,6], [1,4,7], [2,5,8],
        [0,4,8], [2,4,6]
    ]
    for combo in win_combos:
        if all(brd[i] == player for i in combo):
            return True
    return False

def is_draw(brd):
    return ' ' not in brd

def get_available_moves(brd):
    return [i for i in range(9) if brd[i] == ' ']

def minimax(brd, depth, is_max):
    if check_winner(brd, 'X'):
        return 1
    elif check_winner(brd, 'O'):
        return -1
    elif is_draw(brd):
        return 0

    if is_max:
        best = -math.inf
        for move in get_available_moves(brd):
            brd[move] = 'X'
            score = minimax(brd, depth + 1, False)
            brd[move] = ' '
            best = max(score, best)
        return best
    else:
        best = math.inf
        for move in get_available_moves(brd):
            brd[move] = 'O'
            score = minimax(brd, depth + 1, True)
            brd[move] = ' '
            best = min(score, best)
        return best

def ai_move():
    best_score = -math.inf
    best_move = None
    for move in get_available_moves(board):
        board[move] = 'X'
        score = minimax(board, 0, False)
        board[move] = ' '
        if score > best_score:
            best_score = score
            best_move = move
    board[best_move] = 'X'

def play_game():
    print("Welcome to Tic-Tac-Toe! You are O. AI is X.")
    print("Enter positions 1-9 to place your move.")
    print_board()

    while True:
        try:
            move = input("Enter your move (1-9 or q to quit): ").strip()
            if move.lower() == 'q':
                print("Game exited by user.")
                break
            move = int(move) - 1
            if move < 0 or move > 8 or board[move] != ' ':
                print("Invalid move. Try again.")
                continue
        except (ValueError, KeyboardInterrupt):
            print("\nInvalid input or interrupted. Exiting...")
            break

        board[move] = 'O'
        print_board()

        if check_winner(board, 'O'):
            print("You win!")
            break
        if is_draw(board):
            print("It's a draw!")
            break

        print("AI is thinking...")
        ai_move()
        print_board()

        if check_winner(board, 'X'):
            print("AI wins!")
            break
        if is_draw(board):
            print("It's a draw!")
            break

# Start the game
play_game()
